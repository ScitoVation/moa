<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<title>Kohonen and CPANN toolbox</title>
<meta http-equiv="content-type" content="text/html; charset=iso-8859-1">
<meta name="generator" content="HAPedit 3.0">

<link href = "style_structure.css" rel="stylesheet" type="text/css">
<link href = "style_text.css" rel="stylesheet" type="text/css">
<link href = "style_tables.css" rel="stylesheet" type="text/css">

</head>
<body>
<div id="container">
<a name="top"></a>

    <div id="header">
		<iframe src="header.htm" width="740" height="60" scrolling="no" frameborder="0">
  			no i_frames allowed :: change browser
	  	</iframe>
    </div>

    <div id="content">

		<table width="740" border="0" cellpadding="0" cellspacing="0">
  		<tr>
		<td width="150" valign="top">
		
		<iframe src="menu_lateral.htm" width="135" height="340" scrolling="no" frameborder="0">
  			no i_frames allowed :: change browser
	  	</iframe>
		
		</td>

    	<td valign="top">

		  <div align="justify">
		    <div id="tab_duo_contenitor" class="text">
		    <span class="title_page">Using the GUI </span><span class="title_paragraph">(graphical interface)</span> 		
		    <BR>
		    <BR>
    
		<div id="tab_duo_text">
	          <div id="tab_space_lateral"><a href="#sub_0" class="lnk_text">Starting the graphical interface</a></div>
		      <div id="tab_space_lateral"><a href="#sub_1" class="lnk_text">Loading data and models</a></div>
		      <div id="tab_space_lateral"><a href="#sub_1" class="lnk_text">Viewing the data </a></div>
		      <div id="tab_space_lateral"><a href="#sub_3" class="lnk_text">How to calculate Kohonen Maps and CP-ANNs</a></div>
		      <div id="tab_space_lateral"><a href="#sub_4" class="lnk_text">Viewing  results</a></div>
		      <div id="tab_space_lateral"><a href="#sub_5" class="lnk_text">Saving results</a></div>
			  <div id="tab_space_lateral"><a href="#sub_6" class="lnk_text">Predicting new samples</a></div>
	   	</div>
    
	<BR><a name="sub_0"></a>
		    <BR>
		    
		<span class="title_paragraph">Starting the graphical interface</span>
		    <BR>
		    <BR>
		    The toolbox can work both with the MATLAB command window and with its graphical interface. The graphical interface enables you to do all the steps of the analysis (data loading, setting preparation, model calculation, sample prediction, cross-validation). In order to start the graphical interface, type the following code in the MATLAB command window:
			<BR>
            <BR>
            <div id="tab_duo_text" class="text_math"> model_gui </div>
            <BR>
the main form of the graphical interface will appear:<BR>
<center><img src="gui_1.gif" width="518" height="217"></center>
</div>
		    <div class="text">
		      <p>		        In order to activate the buttons and the menu of the form, data or models must be loaded. In the window, two listboxes will show the details of the loaded data (on the left) and of the loaded (or calculated) model (on the right).<BR>
		        <BR>
			    [<a href="#top" class="lnk_text">-> top</a>]<BR>
			    
		    <BR>
		        <a name="sub_1"></a>
		        <BR>
		        
		    <span class="title_paragraph">Loading data and models</span>
		        <BR>
		        <BR>
		        Data, class vectors and models can be loaded directly from the matlab workspace or from a matlab data file. In order to load a dataset, select  the file menu (&quot;file-&gt;load data&quot;). If CP-ANNs will be calculated, a class must be loaded too (&quot;file-&gt;load class&quot;). <BR>Models can  be saved (see next paragraphs) and loaded in the graphical interface: in order to load models select &quot;file-&gt;load models&quot;. Loaded data and models can also be deleted. When loading data, classes and models, an automatic filter will display in the listbox only the allowed matlab variables. <BR>
		        Sample and variable labels can be loaded from the &quot;file&quot; menu. If so, labels will be stored in the calculated models and will be visualised in the Kohonen top map. Details on the structure of label vectors are given <a href="start.htm" class="lnk_text">here</a>. Pay attention: if you wish to visualize labels, these have to be loaded before the model calculation. <BR>
		        <BR>
			    [<a href="#top" class="lnk_text">-> top</a>]
		        <BR>
		        <BR> 
		        <a name="sub_2"></a>
		        <BR>
		        
		    <span class="title_paragraph">Viewing the data</span>
		        <BR>
		        <BR>
	          Data and class vector (if loaded) can be seen in the view menu (&quot;view-&gt;view data matrix&quot; and &quot;view-&gt;view class vector&quot;). 
		        A new variable (tmp_view) will be created in the matlab work space. 
		        &quot;view-&gt;plot samples&quot; will show the sample profiles, while &quot;view-&gt;plot means&quot; will show the profiles of the variable averages. If the class vector is loaded,  samples will be coloured with the corresponding class colour, while the averages will be calculated on each class separately. Finally, "view-&gt;plot univariate stat" will open a form for plotting boxplots, histograms and biplots of variables. <BR>
		        <BR>
		        [<a href="#top" class="lnk_text">-> top</a>] <BR>
		        <BR>
		        <a name="sub_3"></a>
		        <BR>
		        
		        <span class="title_paragraph">How to calculate models</span>
		        <BR>
		        <BR>
		        In order to calculate models select the &quot;calculate model&quot; button or the  calculate menu. The &quot;model settings&quot; form will appear:
				 <BR>
				 <center>
				   <img src="gui_2.gif" width="446" height="283">				 </center><BR>
		        First of all, the model type must be chosen. If the class vector is not loaded, only Kohonen Maps can be calculated (unsupervised modeling), otherwise the user can choose in between  Counterpropagation Artificial Neural networs (CP-ANNs), Supervised Kohonen networks, XY-fused networks, that are supervised methods. <BR>
		        The number of neurons must be set. This is the number of neurons for each side of the map. Taking into consideration that the map is a square, if you enter 7, you'lle get a total number of neurons equal to 7*7 = 49.<BR>
	            The number of epochs can be selected. This defines the number of times the objects will be introduced in the net. Consider that in this toolbox, a new strategy for the selection of the optimal number of epochs and neurons of classification  models is provided. <a href="optimisation.htm" class="lnk_text">Read the corresponding help section here</a>.<BR>
	            The topology condition ('square' or 'hexagonal') can be selected. If you select the 'hexagonal' topology togheter with a toroidal boundary condition, you must define an even number of neurons. <BR>
	            If supervised methods are selected as model type, you can choose also to cross-validate the model. Cross validation can be performed with venetian blinds or contiguous blocks (cross-validation type). Regarding venetian blinds, with 3 cross-validation groups the split of the first group in venetian blinds will be [t,0,0,t,0,0,....,t,0,0], while the second one will be [0,t,0,0,t,0,....,0,t,0], and so on. On the other hand, the split of the first group with contiguous blocks will be [t,t,t,t,0,0,....,0,0,0] and so on. If cross-validation is performed, the number of cross-validation groups must be defined (default value is 5). <BR>
	            Besides this basic settings, the user can also change the advanced settings by clicking on the &quot;show advanced settings&quot; button. The advanced settings are <a href="start.htm" class="lnk_text">thoroughly explained in the start section</a>. Finally, settings can be saved (as a structure) and loaded from this form. Clicking on the &quot;calculate model&quot; button, the calculation will start and a waiting bar will appear, showing the percentage of epochs calculated.<BR>
			    <BR>
			    [<a href="#top" class="lnk_text">-> top</a>] <BR>
		        <BR>
		        <a name="sub_4"></a>
		        <BR>
		        
		        <span class="title_paragraph">Viewing results</span>
		        <BR>
		        <BR>
		        After the model calculation, the model window in the main form is updated with the model details (number of neurons and epochs used for training the model, number of variables used to build the model, and error rates in the case of supervised methods).
    
			It is  possible to view the top map clicking on the &quot;view top map&quot; button (or choosing &quot;results-&gt;view top map&quot; in the menu): the top map form will appear. For further details on this form (where it is possible to visualize the samples on the top map, the Kohonen weights, the output weights and calculate  PCA on the weights) look the &quot;How to plot the results&quot; section of <a href="kohonen.htm" class="lnk_text">Kohonen maps</a>, <a href="cpann.htm" class="lnk_text">CP-ANNs</a>, <a href="xyf.htm" class="lnk_text">XY-F</a> or <a href="skn.htm" class="lnk_text">SKN</a> help sections. <BR>
			If supervised methods (CP-ANNs, XYF, SKN) are calculated, it is possible the look the classification performances of the model by clicking on the &quot;classification results&quot; button. The &quot;view classification results&quot; form will appear:<BR><BR>
			<center>
			  <img src="gui_3.gif" width="375" height="370">			</center><BR>
			On the left of the form, error rate, non-error rate, specificity, sensitivity, precision and the ratio of not assigned samples (when higher than 0) are shown both in fitting (all the samples used to build the model) and in cross-validation (<a href="classparameters.htm" class="lnk_text">look here</a> for further inforomation on these classification parameters). On the right of the form it is possible to plot the class profiles: a figure will appear where the mean of the kohonen weights for each layer (variable) for each class is shown. The &quot;plot ROC curves&quot; button will open a plot with the <a href="classparameters.htm" class="lnk_text">ROC curve</a> of each class.<BR>
			The &quot;view confusion matrix&quot; button shows the confusion matrix (<a href="classparameters.htm" class="lnk_text">look here</a> for further inforomation on this classification parameter). The &quot;view predicted class&quot; shows the vector with the class assignment of each sample [n x 1], while the &quot;view class weights&quot; button shows the output weights associated to each sample [n x c], where c is the number of classes. At the end of the training, each sample is placed in a defined neuron. Since each neuron is characterised by Kohonen weights and output weights, it is possible to link each sample to the output weights of the neuron where the sample is placed. These weights represent the class probabilities of assignment for the sample.<BR>
			Confusion matrix, predicted classes and class weights can be displayed both on the fitting and cross-validation results.<BR>
		        <BR>
		        [<a href="#top" class="lnk_text">-> top</a>] <BR>
		        <BR>
		        <a name="sub_5"></a>
		        <BR>
		        
		        <span class="title_paragraph">Saving results</span>
		        <BR>
		        <BR>
		        Kohonen and CP-ANNs models can be saved from the file menu. The models are saved as structures in the matlab workspace (for further information on the model structure look the &quot;How to read the results&quot; sections of <a href="kohonen.htm" class="lnk_text">Kohonen maps</a>, <a href="cpann.htm" class="lnk_text">CP-ANNs</a>, <a href="xyf.htm" class="lnk_text">XY-F</a> or <a href="skn.htm" class="lnk_text">SKN</a> help sections). If supervised methods (CP-ANNs, XYF, SKN) are calculated, the cross-validation results can be saved also (for further information on the cross-validation structure look the &quot;Cross validation of Counterpropagation ANNs&quot; section of <a href="cpann.htm" class="lnk_text">CP-ANNs</a> help section). Also predictions on new samples can be saved as structures in the matlab
 workspace (for further information on the prediction structure look the
 help provided in each <a href="routines.htm" class="lnk_text">matlab m file</a>, e.g. pred_kohonen, 
 pred_cpann,
 pred_skn and
 pred_xyf).<BR>
		        <BR>
		        [<a href="#top" class="lnk_text">-> top</a>] <BR>
	              <BR>
	              <a name="sub_6"></a>
                <BR>
		        
                  <span class="title_paragraph">Predicting new samples</span>
                <BR>
                <BR>
                When a model is loaded or calculated, a new set of samples can be loaded, overwriting the set of samples used for the calculation. This enables the &quot;predict sample&quot; button (and the corresponding menu).	The button (and the menu) is not active when the data used for the calculation of the model are loaded. This new set of samples can be consequently predicted using a previously calculated model. The new samples are projected in the model (but not used to calculate the model). Clicking the button, the &quot;predict samples&quot; form will appear: <BR>
                <center>
                  <img src="gui_4.gif" width="382" height="213">
                </center><BR>
                If Kohonen maps are calculated, only the &quot;view samples in top map&quot; button is active. Clicking on this button, the top map with the new predicted samples is shown. Predicted sampels are marked in red with a &quot;P&quot; at the beginning of their labels. <BR>
                If supervised methods (CP-ANNs, XYF, SKN) are calculated,  the &quot;view predicted class&quot; and &quot;view class weights&quot; buttons are active. The &quot;view predicted class&quot; shows the vector with the class prediction of each sample [n x 1], while the &quot;view class weights&quot; button shows the output weights associated to each sample [n x c], where c is the number of classes. Each sample is placed in a defined neuron. Since each neuron is characterised by Kohonen weights and output weights, it is possible to link each sample to the output weights of the neuron where the sample is placed. These weights represent the class probabilities of assignment for the sample.<BR>
                Finally, if a class was previusoly loaded togheter with the samples to be predicted, classification parameters on the predicted sampekls are calculated. On the left of the form, error rate, non-error rate, specificity, sensitivity, precision and the ratio of not assigned samples (when higher than 0) are shown. 
The &quot;view confusion matrix&quot; button shows the confusion matrix. <a href="classparameters.htm" class="lnk_text">Look here</a> for further inforomation on these classification parameters. <BR>
Finally, prediction results can be saved from the &quot;file-&gt;save prediction&quot; menu. <BR>
                <BR>
                [<a href="#top" class="lnk_text">-> top</a>] <BR>
                <BR>
                <BR>
              </p>
            </div>
  
		  </div></td>
  		</tr>
	  </table>

    </div>

    <div id="footer">
		<iframe src="footer.htm" width="700" height="13" scrolling="no" frameborder="0">
  			no i_frames allowed :: change browser
	  	</iframe>
	</div>
</div>
</body>
</html>