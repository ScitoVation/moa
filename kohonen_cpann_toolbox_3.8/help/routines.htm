<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<title>Kohonen and CPANN toolbox</title>
<meta http-equiv="content-type" content="text/html; charset=iso-8859-1">
<meta name="generator" content="HAPedit 3.0">

<link href = "style_structure.css" rel="stylesheet" type="text/css">
<link href = "style_text.css" rel="stylesheet" type="text/css">
<link href = "style_tables.css" rel="stylesheet" type="text/css">

</head>
<body>
<div id="container">
<a name="top"></a>

    <div id="header">
		<iframe src="header.htm" width="740" height="60" scrolling="no" frameborder="0">
  			no i_frames allowed :: change browser
	  	</iframe>
    </div>

    <div id="content">

		<table width="740" border="0" cellpadding="0" cellspacing="0">
  		<tr>
		<td width="150" valign="top">
		
		<iframe src="menu_lateral.htm" width="135" height="340" scrolling="no" frameborder="0">
  			no i_frames allowed :: change browser
	  	</iframe>
		
		</td>

    	<td valign="top">

		  <div align="justify">
		    <div id="tab_duo_contenitor" class="text">
		    <span class="title_page">Matlab routines</span>		
		    <BR>
		    <BR>
    
		<div id="tab_duo_text">
			  <div id="tab_space_lateral"><a href="#sub_0" class="lnk_text">model_gui</a></div>
		      <div id="tab_space_lateral"><a href="#sub_1" class="lnk_text">som_settings</a></div>
			  <div id="tab_space_lateral"><a href="#sub_1b" class="lnk_text">opt_model</a></div>
		      <div id="tab_space_lateral"><a href="#sub_2" class="lnk_text">model_kohonen</a></div>
		      <div id="tab_space_lateral"><a href="#sub_3" class="lnk_text">model_cpann</a></div>
			  <div id="tab_space_lateral"><a href="#sub_4" class="lnk_text">model_skn</a></div>
			  <div id="tab_space_lateral"><a href="#sub_5" class="lnk_text">model_xyf</a></div>
		      <div id="tab_space_lateral"><a href="#sub_6" class="lnk_text">pred_kohonen</a></div>
		      <div id="tab_space_lateral"><a href="#sub_7" class="lnk_text">pred_cpann</a></div>
			  <div id="tab_space_lateral"><a href="#sub_7a" class="lnk_text">pred_skn</a></div>
			  <div id="tab_space_lateral"><a href="#sub_7b" class="lnk_text">pred_xyf</a></div>
		      <div id="tab_space_lateral"><a href="#sub_8" class="lnk_text">cv_cpann</a></div>
			  <div id="tab_space_lateral"><a href="#sub_9" class="lnk_text">cv_skn</a></div>
			  <div id="tab_space_lateral"><a href="#sub_10" class="lnk_text">cv_xyf</a></div>
		      <div id="tab_space_lateral"><a href="#sub_11" class="lnk_text">visualize_model</a></div>
	   	</div>
    
		<BR><a name="sub_0"></a>
		    <BR>
		    This is a list of the main MATLAB routines you can use to develop Kohonen and CP-ANNs models<BR><BR>
			<span class="title_paragraph">model_gui</span>
		    <BR>
		    <BR>
model_gui opens a <a href="gui.htm" class="lnk_text">GUI  for calculating both Kohonen Maps and CPANNs</a>; in order to open the graphical interface, just type on the matlab command line:<br>
<br>
<strong>model_gui</strong><br>
<br>
there are no inputs, data can be loaded and saved directly from the 
 graphical interface.<BR>
<BR>[<a href="#top" class="lnk_text">-> top</a>]
		    <BR><a name="sub_1"></a><BR><BR>
		<span class="title_paragraph">som_settings</span>
		    <BR>
		    <BR>
default <a href="start.htm" class="lnk_text">setting structure</a> for Kohonen maps and counterpropagation artificial neural networks (CP-ANNs); som_settings build a default structure with all the parameter needed to
perform Kohonen maps, CP-ANNs, XYF and SKN models <BR>
<BR>
<strong>settings = som_settings(type);</strong><BR>
<BR>type "help som_settings" on the MATLAB command window for further informations
		
		    <BR>
		    <BR>
			[<a href="#top" class="lnk_text">-> top</a>]
		    <BR>
		    <a name="sub_1b" id="sub_1b"></a><BR>
		    <BR>
            <span class="title_paragraph">opt_model</span> <BR>
            <BR>
opt_model searches the optimal number of neurons and epochs for classification model based on SOMSs by means of Genetich Algorithms<BR>
<BR>
<strong>opt_res = <BR>opt_model(X,class,settings,val_type,num_groups,opt_fun,ns_bank,ep_bank,rep_model);</strong><BR>
<BR>
type "help opt_model" on the MATLAB command window for further informations <BR>
<BR>
[<a href="#top" class="lnk_text">-> top</a>] <BR> <a name="sub_2"></a>
		    <BR>
		
		<span class="title_paragraph">model_kohonen</span>
		    <BR>
		    <BR>
			Kohonen maps;
			model_kohonen builds <a href="kohonen.htm" class="lnk_text">Kohonen maps</a> (self organising maps, SOM)<br>
			<br>
			<strong>model = model_kohonen(X,settings);</strong><br>
			<BR>
			type "help model_kohonen" on the MATLAB command window for further informations <BR>
		    <BR>
			[<a href="#top" class="lnk_text">-> top</a>]<BR><BR>
            <a name="sub_3"></a> <BR>
            <span class="title_paragraph">model_cpann</span> <BR>
            <BR>
Counterpropagation Artificial Neural Networks (CP-ANNs); model_cpann builds a classification model based on <a href="cpann.htm" class="lnk_text">CP-ANNs</a><br>
            <strong><br>
model = model_cpann(X,class,settings);</strong><br>
<br>
type "help model_cpann" on the MATLAB command window for further informations <BR>
<BR>
[<a href="#top" class="lnk_text">-> top</a>] <BR>
            <BR>
            <a name="sub_4" id="sub_4"></a> <BR>
            <span class="title_paragraph">model_skn</span> <BR>
            <BR>
Supervised Kohonen networks (SKN); model_skn builds a classification model based on <a href="skn.htm" class="lnk_text">Supervised Kohonen networks</a><br>
            <strong><br>
model = model_skn(X,class,settings);</strong><br>
<br>
type "help model_skn" on the MATLAB command window for further informations <BR>
<BR>
[<a href="#top" class="lnk_text">-> top</a>] <BR>
            <BR>
            <a name="sub_5" id="sub_5"></a> <BR>
            <span class="title_paragraph">model_xyf</span> <BR>
            <BR>
XY-fused networks (XY-F); model_skn builds a classification model based on <a href="xyf.htm" class="lnk_text">XY-fused networks</a><br>
            <strong><br>
model = model_xyf(X,class,settings);</strong><br>
<br>
type "help model_xyf" on the MATLAB command window for further informations <BR>
<BR>
[<a href="#top" class="lnk_text">-> top</a>] <BR>
<BR> <a name="sub_6" id="sub_6"></a>
		    <BR>

		<span class="title_paragraph">pred_kohonen</span>
		    <BR>
		    <BR>
			prediction of unknown samples with <a href="kohonen.htm" class="lnk_text">Kohonen maps</a>;
			pred_kohonen projects new samples by using a previuos model
			built by means of Kohonen maps (model_kohonen)<br>
			<br>
			<strong>pred = pred_kohonen(X,model);</strong><br>
			<br>
			type "help pred_kohonen" on the MATLAB command window for further informations<BR>
		    <BR>
			[<a href="#top" class="lnk_text">-> top</a>]
		    <BR>
		    <BR> <a name="sub_7" id="sub_7"></a>
		    <BR>

		<span class="title_paragraph">pred_cpann</span>
		    <BR>
		    <BR>
			prediction of unknown samples with counterpropagation artificial neural networks (<a href="cpann.htm" class="lnk_text">CP-ANNs</a>); 
			pred_cpann predicts classes of unknown samples by using a previuos model built by means of CP-ANNs (model_cpann)<br>
			<br>
			<strong>pred = pred_cpann(X,model);</strong><br>
			<br>
			type "help pred_cpann" on the MATLAB command window for further informations<BR>
		    <BR>
			[<a href="#top" class="lnk_text">-> top</a>]
		    <BR>
            <BR>
            <a name="sub_7a" id="sub_7a"></a> <BR>
            <span class="title_paragraph">pred_skn</span> <BR>
            <BR>
prediction of unknown samples with supervised Kohonen networks (<a href="skn.htm" class="lnk_text">SKNs</a>); pred_skn predicts classes of unknown samples by using a previuos model built by means of SKNs (model_skn)<br>
            <br>
            <strong>pred = pred_skn(X,model);</strong><br>
            <br>
type "help pred_cpann" on the MATLAB command window for further informations<BR>
<BR>
[<a href="#top" class="lnk_text">-> top</a>] <BR>
<BR>
<a name="sub_7b" id="sub_7b"></a> <BR>
<span class="title_paragraph">pred_xyf</span> <BR>
<BR>
prediction of unknown samples with XY-Fused networks (<a href="xyf.htm" class="lnk_text">XY-Fs</a>); pred_xyf predicts classes of unknown samples by using a previuos model built by means of XY-Fs (model_xyf)<br>
            <br>
            <strong>pred = pred_xyf(X,model);</strong><br>
            <br>
type "help pred_cpann" on the MATLAB command window for further informations<BR>
<BR>
[<a href="#top" class="lnk_text">-> top</a>] <BR>
		    <BR> <a name="sub_8" id="sub_8"></a>
		    <BR>

		<span class="title_paragraph">cv_cpann</span>
		    <BR>
		    <BR>
			cross validation for Counterpropagation Artificial Neural Networks (<a href="cpann.htm" class="lnk_text">CP-ANNs</a>); cross validation is performed with venetian blinds (i.e. with 3 cv groups 
			the split of the first group will be [1,0,0,1,0,0,....,1,0,0] and so on) or contiguous blocks (i.e. the split of the first group will be  [1,1,1,1,0,0,....,0,0,0] and so on). <br>
			<br>
			<strong>cv = cv_cpann(X,class,settings,cv_type,cv_groups);</strong><br>
			<br>
			type "help cv_cpann" on the MATLAB command window for further informations<BR>
		    <BR>
			[<a href="#top" class="lnk_text">-> top</a>]
		    <BR>
		    <BR>
            <a name="sub_9" id="sub_9"></a> <BR>
            <span class="title_paragraph">cv_skn</span> <BR>
            <BR>
cross validation for <a href="skn.htm" class="lnk_text">Supervised Kohonen networks</a>; cross validation is performed with venetian blinds (i.e. with 3 cv groups the split of the first group will be [1,0,0,1,0,0,....,1,0,0] and so on) or contiguous blocks (i.e. the split of the first group will be [1,1,1,1,0,0,....,0,0,0] and so on). <br>
            <br>
            <strong>cv = cv_skn(X,class,settings,cv_type,cv_groups);</strong><br>
            <br>
type "help cv_skn" on the MATLAB command window for further informations<BR>
<BR>
[<a href="#top" class="lnk_text">-> top</a>] <BR>
<BR>
<a name="sub_10" id="sub_10"></a> <BR>
<span class="title_paragraph">cv_xyf</span> <BR>
<BR>
cross validation for <a href="xyf.htm" class="lnk_text">XY-fused networks</a>; cross validation is performed with venetian blinds (i.e. with 3 cv groups the split of the first group will be [1,0,0,1,0,0,....,1,0,0] and so on) or contiguous blocks (i.e. the split of the first group will be [1,1,1,1,0,0,....,0,0,0] and so on). <br>
            <br>
            <strong>cv = cv_xyf(X,class,settings,cv_type,cv_groups);</strong><br>
            <br>
type "help cv_xyf" on the MATLAB command window for further informations<BR>
<BR>
[<a href="#top" class="lnk_text">-> top</a>] <BR>
<BR> <a name="sub_11" id="sub_11"></a>
		    <BR>

		<span class="title_paragraph">visualize_model</span>
		    <BR>
		    <BR>
			visualisation of the <a href="kohonen.htm" class="lnk_text">Kohonen map</a> or <a href="cpann.htm" class="lnk_text">CP-ANNs</a> results;
			visualize_model opens a GUI figure for exploring the results<br>
			<br>
			<strong>visualize_model(model);</strong><br>
			<br>
			Sample labels and variable labels can be loaded as optional inputs. Type "help visualize_model" on the MATLAB command window for further informations<BR>
		    <BR>
			[<a href="#top" class="lnk_text">-> top</a>]		    <BR>
			<BR>
			<BR>&nbsp;  	     
		 </div>
  
		  </div></td>
  		</tr>
	  </table>

    </div>

    <div id="footer">
		<iframe src="footer.htm" width="700" height="13" scrolling="no" frameborder="0">
  			no i_frames allowed :: change browser
	  	</iframe>
	</div>
</div>
</body>
</html>